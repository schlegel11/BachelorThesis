{"generator":"Code Snippets v2.13.3","date_created":"2019-06-05 02:23","snippets":[{"name":"MobileCoach add participant id to get.on plattform","scope":"front-end","code":"\/\/ Result class for success and error status\/messages and a result object.\nclass Result\n{\n\tpublic $success;\n\tpublic $failure;\n\tpublic $message;\n\tpublic $result_object;\n\n\tprivate function __construct($s)\n\t{\n\t\t$this->success = $s;\n\t\t$this->failure = !$s;\n\t}\n\n\tpublic static function success()\n\t{\n\t\treturn new Result(true);\n\t}\n\n\tpublic static function failure()\n\t{\n\t\treturn new Result(false);\n\t}\n\n\tpublic function message($em)\n\t{\n\t\t$this->message = $em;\n\t\treturn $this;\n\t}\n\n\tpublic function result_object($ro)\n\t{\n\t\t$this->result_object = $ro;\n\t\treturn $this;\n\t}\n}\n\/\/ Validate the logindata.\nfunction check_user_auth($user, $password)\n{\n\treturn is_email($user) ? wp_authenticate_email_password(NULL, $user, $password) : wp_authenticate_username_password(NULL, $user, $password);\n}\n\/\/ Check logindata and return success or failure result.\nfunction auth_user($user, $password)\n{\n\t$result = check_user_auth($user, $password);\n\n\tif (is_wp_error($result)) {\n\n\t\tswitch ($result->get_error_code()) {\n\t\t\tcase \"empty_username\":\n\t\t\t\treturn Result::failure()->message(\"Bitte einen Benutzernamen oder E-Mail-Adresse angeben.\");\n\t\t\tcase \"empty_password\":\n\t\t\t\treturn Result::failure()->message(\"Bitte ein Passwort angeben.\");\n\t\t\tcase \"invalid_username\":\n\t\t\t\treturn Result::failure()->message(\"Benutzername\/E-Mail-Adresse oder Passwort ist ung\u00fcltig. Probiere es nochmal.\");\n\t\t\tcase \"incorrect_password\":\n\t\t\t\treturn Result::failure()->message(\"Benutzername\/E-Mail-Adresse oder Passwort ist ung\u00fcltig. Probiere es nochmal.\");\n\t\t\tdefault:\n\t\t\t\treturn Result::failure()->message(\"Ein Fehler ist aufgetreten. Bitte wende dich an den Administrator.\");\n\t\t}\n\t}\n\treturn Result::success()->result_object($result);\n}\n\/\/ Define the table name.\nfunction get_participant_table_name()\n{\n\tglobal $wpdb;\n\treturn $wpdb->prefix . \"mc_participants\";\n}\n\/\/ If table wp_mc_participants doesn't exist create it.\nfunction create_participant_table()\n{\n\tglobal $wpdb;\n\t$table_exists = function ($table) use (&$wpdb) {\n\t\treturn $wpdb->get_var(\"SHOW TABLES LIKE '{$table}'\") == $table;\n\t};\n\n\t$table_name = get_participant_table_name();\n\t$charset_collate = $wpdb->get_charset_collate();\n\n\tif (!$table_exists($table_name)) {\n\t\t$sql = \"CREATE TABLE $table_name (\n            wp_users_id bigint(20) UNSIGNED NOT NULL,\n            participant_id varchar(30) NOT NULL,\n\t\t\tFOREIGN KEY  (wp_users_id) REFERENCES wp_users(ID),\n            PRIMARY KEY  (wp_users_id,participant_id)\n        ) $charset_collate;\";\n\n\t\tif (!function_exists('dbDelta')) {\n\t\t\trequire_once(ABSPATH . 'wp-admin\/includes\/upgrade.php');\n\t\t}\n\n\t\tdbDelta($sql);\n\n\t\tif (!$table_exists($table_name)) {\n\t\t\treturn Result::failure()->message(\"Konnte Tabelle nicht erstellen. Bitte wende dich an den Administrator.\");\n\t\t}\n\t}\n\n\treturn Result::success();\n}\n\/\/ Insert GET.ON user and participant ID in table wp_mc_participants.\nfunction insert_wp_user_mc_participant($wp_user, $participant_id)\n{\n\tglobal $wpdb;\n\n\t$table_name = get_participant_table_name();\n\t$row_exists = function ($user, $pid) use (&$wpdb, &$table_name) {\n\t\treturn $wpdb->get_var(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT COUNT(*) FROM $table_name\n                WHERE wp_users_id = %d\n                AND participant_id = %s\",\n\t\t\t\t$user,\n\t\t\t\t$pid\n\t\t\t)\n\t\t) > 0;\n\t};\n\n\tif (empty($participant_id)) {\n\t\treturn Result::failure()->message(\"Participant id konnte nicht ermittelt werden. Bitte wende dich an den Administrator.\");\n\t}\n\tif ($row_exists($wp_user->ID, $participant_id)) {\n\t\treturn Result::failure()->message(\"Du bist bereits mit der GET.ON Plattform verbunden. Es sind keine weiteren Schritte erforderlich.\");\n\t}\n\n\t$result = $wpdb->insert(\n\t\t$table_name,\n\t\tarray(\n\t\t\t\"wp_users_id\"   => $wp_user->ID,\n\t\t\t\"participant_id\"   => $participant_id\n\t\t)\n\t);\n\treturn is_bool($result) && !$result ? Result::failure()->message(\"Kein insert m\u00f6glich. Bitte wende dich an den Administrator.\") : Result::success();\n}\n\/\/ Compose functions for calling it via shortcode.\nadd_shortcode('shortcode_connect_mobile_coach', function ($attributes) {\n\t$validAtts = shortcode_atts(array(\n\t\t'user' => '',\n\t\t'password' => '',\n\t\t'participant_id' => ''\n\t), $attributes);\n\t\/\/ Check logindata.\n\t$result = auth_user($validAtts[user], $validAtts[password]);\n\tif ($result->failure) {\n\t\treturn $result->message;\n\t}\n\t\/\/ Create table if it doesn't exist.\n\t$wp_user = $result->result_object;\n\t$result = create_participant_table();\n\tif ($result->failure) {\n\t\treturn $result->message;\n\t}\n\t\/\/ Insert data record\n\t$result = insert_wp_user_mc_participant($wp_user, $validAtts[participant_id]);\n\tif ($result->failure) {\n\t\treturn $result->message;\n\t}\n\t\/\/ If everything is successful send javascript back to the MobileCoach App for closing the webview.\n\treturn <<<EOF\n\t\t<script type=\"text\/javascript\">\n\t\t\tfunction checkReady() {\n\t\t\t\tif (window.postMessage != undefined && window.postMessage != null && typeof window.postMessage === 'function' && window.postMessage.length === 1) {\n\t\t\t\t\tsendResults();\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(checkReady, 100);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction sendResults() {\n\n\t\t\t\twindow.postMessage('close');\n\t\t\t}\n\t\t\t$(document).ready(function() {\n\t\t\t\tsetTimeout(checkReady, 100);\n\t\t\t});\n\t\t<\/script>\nEOF;\n});\n","priority":"10"}]}